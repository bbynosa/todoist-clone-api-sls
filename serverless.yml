service: todolist-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  environment:
    DYNAMODB_TABLE_NAME: todos-${sls:stage}
    DYNAMODB_SERVICE_ENDPOINT: https://dynamodb.us-east-1.amazonaws.com 
  iam:
    role:
      statements:
        - Action:
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:DeleteItem
          Effect: Allow
          Resource:
            Fn::GetAtt:
              - todosTable
              - Arn
    # deploymentRole: 
    #   Fn::Sub: 'arn:aws:iam::${AWS::AccountId}:role/TodolistApi-CloudFormationExecutionRole'
  httpApi:
    cors: true

custom:
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: todos-${sls:stage}
            rawsources: [./seeds/todos-raw.json]
  serverless-offline:
    noTimeout: true

package:
  exclude:
    - .dynamodb/**
    - .serverless/**
    - .vscode/**
    - node_modules/**
    - seeds/**
    - toolist-api/**
    - package**.json
    - README.md

plugins:
  - serverless-dynamodb-local
  - serverless-offline
functions:
  getTodos:
    handler: todos/list.handler
    events:
      - httpApi:
          path: /todos
          method: get

  getTodo:
    handler: todos/get.handler
    events:
      - httpApi:
          path: /todos/{id}
          method: get
        
  postTodo:
    handler: todos/create.handler
    events:
      - httpApi:
          path: /todos
          method: post

  putTodo:
    handler: todos/update.handler
    events:
      - httpApi:
          path: /todos/{id}
          method: put

  deleteTodo:
    handler: todos/delete.handler
    events:
      - httpApi:
          path: /todos/{id}
          method: delete

resources:
  Resources:
    todosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.DYNAMODB_TABLE_NAME}